// Generated by CoffeeScript 1.12.4
(function() {
  var checks, fs, meta, parser, report, usage, utils;

  checks = require(__dirname + "/checks");

  fs = require('fs');

  meta = require(__dirname + "/../package.json");

  parser = require(__dirname + "/parser");

  utils = require(__dirname + "/utils");

  usage = function() {
    console.log("Dockerlint " + meta["version"] + "\n\n \tusage: dockerlint [-h] [-dp] [-f Dockerfile]");
    return process.exit(0);
  };

  report = function(dockerfile, ok) {
    if (ok) {
      console.log("");
      return utils.log("INFO", dockerfile + " is OK.\n");
    } else {
      console.log("");
      return utils.log("FATAL", dockerfile + " failed.\n");
    }
  };

  exports.run = function(args) {
    var check, dockerfile, i, len, ok, ref, rules;
    if (args.help) {
      usage();
    }
    dockerfile = args.file || args._[0] || 'Dockerfile';
    dockerfile = dockerfile.toString();
    if (!fs.existsSync(dockerfile)) {
      utils.log("FATAL", "Cannot open " + dockerfile + ".");
    }
    if (!fs.lstatSync(dockerfile).isFile()) {
      utils.log("FATAL", dockerfile + " is not a file.");
    }
    rules = parser.parser(dockerfile);
    if (rules.length === 0) {
      utils.log("FATAL", dockerfile + " does not contain any instructions");
    }
    if (args.debug) {
      utils.log('DEBUG', rules);
    }
    ok = true;
    ref = checks.all;
    for (i = 0, len = ref.length; i < len; i++) {
      check = ref[i];
      if (checks[check](rules) === 'failed') {
        ok = false;
      }
    }
    return report(dockerfile, ok);
  };

}).call(this);
